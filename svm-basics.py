# -*- coding: utf-8 -*-
"""21l5640lab10.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1I0aNEFTgniyosiQZfiHqhLUi8NWSImaO
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

# Importing the datasets
from sklearn.preprocessing import StandardScaler
from sklearn.svm import SVC

def myPower(b, e):
  if (e == 0):
    return 1
  else:
    return b * myPower(b, e - 1)


myPower(10, 3)

def subtotal(arr):

    running_sum = 0

    for i in range(len(arr)):

        running_sum += arr[i]


        arr[i] = running_sum


    return arr, running_sum / len(arr)

arr = [0, 1, 2, 3, 4]

subtotal_arr, average = subtotal(arr)

print(subtotal_arr)
print(average)

def Counter(charArray):
    totalChars = 0
    uppercaseChars = 0
    lowercaseChars = 0
    spaces = 0

    for char in charArray:
        if char.isalpha():
            if char.isupper():
                uppercaseChars += 1
            else:
                lowercaseChars += 1
        elif char.isspace():
            spaces += 1
        else:
            totalChars += 1

    return totalChars, uppercaseChars, lowercaseChars, spaces

charArray = "Hello, I am a student of FAST University."
totalChars, uppercaseChars, lowercaseChars, spaces = Counter(charArray)

print("No. of letters are:", totalChars)
print("No. of spaces are:", spaces)
print("No. of uppercase letters are:", uppercaseChars)
print("No. of lowercase letters:", lowercaseChars)

def findMedianSortedArrays(nums1, nums2):

    combinedArray = nums1 + nums2
    combinedArray.sort()


    midIndex = (len(combinedArray) - 1) // 2


    if len(combinedArray) % 2 == 0:

        median = (combinedArray[midIndex] + combinedArray[midIndex + 1]) / 2
    else:

        median = combinedArray[midIndex]

    return median


nums1 = [1, 3]
nums2 = [2]
median = findMedianSortedArrays(nums1, nums2)
print(median)